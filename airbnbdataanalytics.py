# -*- coding: utf-8 -*-
"""AirBNBDataAnalytics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vIxdlnlO-Q-AcDt_-hxaSznGMiF3W9pT
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sklearn as sk
import seaborn as sns

# QUESTIONS

# This project is aimed to uncover some insights from the Airbnb Open Data. The following questions would be answered from the data.
# 1. What are the different property types in the Dataset?
# 2. Which neighborhood group has the highest number of listings?
# 3. Which neighborhoods group have the highest average prices for Airbnb listings?
# 4. Is there a relationship between the construction year of property and price?
# 5. Who are the top 10 hosts by calculated host listing count?
# 6. Are hosts with verified identities more likely to receive positive reviews?
# 7, Is there a correlation between the price of a listina and its service fee?

df=pd.read_csv("/content/Airbnb_Open_Data.csv")

df.head()

df.info()

df.duplicated().value_counts()

#'brookln' instead of 'Brooklyn'
df[df['neighbourhood group']=='brookln']

df.drop_duplicates(inplace=True)

df.drop(['house_rules','license'],axis=1,inplace=True)

df['price']=df['price'].str.replace('$','',regex=False)
df['service fee']=df['service fee'].str.replace('$','',regex=False)

df['price']=df['price'].str.replace(',','',regex=False)
df['service fee']=df['service fee'].str.replace(',','',regex=False)

df.rename(columns={
    'price':'price_$',
    'service fee':'service_fee_$'
},inplace=True)

df.dropna(inplace=True)

df['price_$']=df['price_$'].astype(float)
df['service_fee_$']=df['service_fee_$'].astype(float)
df['id']=df['id'].astype(str)
df['host id']=df['host id'].astype(str)
df['last review']=pd.to_datetime(df['last review'])
df['Construction year']=df['Construction year'].astype(int)

df.loc[df['neighbourhood group']=='brookln','neighbourhood group']='Brooklyn'

df=df.drop(df[df['availability 365']>500].index)

df.duplicated().value_counts()

df.info()

df.describe()

"""# 1. What are the different property types in the Dataset?"""

property_types=df['room type'].value_counts().to_frame()
property_types

room_type_bar=plt.bar(property_types.index,property_types.loc[:,"count"])
plt.bar_label(room_type_bar,labels=property_types.loc[:,"count"],padding=4)
plt.ylim([0,50000])
plt.xlabel('Room Type')
plt.ylabel('Room Type Count')
plt.title('Property Types and their count in the Dataset')

# 2. Which neighborhood group has the highest number of listings?

hood_group=df['neighbourhood group'].value_counts().to_frame()
hood_group

hood_group_bar=plt.bar(hood_group.index,hood_group.loc[:,"count"])
plt.bar_label(hood_group_bar,labels=hood_group.loc[:,"count"],padding=4)
plt.ylim([0,40000])
plt.xlabel('Neighbouring Groups')
plt.ylabel('Number of Listings')
plt.xticks(rotation=45)
plt.title('Which neighborhood group has the highest number of listings?')

# 3. Which neighborhoods group have the highest average prices for Airbnb listings?

avg_price=df.groupby('neighbourhood group')['price_$'].mean().sort_values(ascending=False).to_frame()
avg_price_bar=plt.bar(avg_price.index,avg_price.loc[:,"price_$"])
plt.bar_label(avg_price_bar,labels=round(avg_price.loc[:,"price_$"],2),label_type='edge',padding=4)
plt.ylim([0,700])
plt.xlabel('Neighbouring Group')
plt.ylabel('Average Price per Listings ($)')
plt.xticks(rotation=45)
plt.title('Average Price per Listings ($) in each Neighborhood Group')

# 4. Is there a relationship between the construction year of property and price?

df.groupby(df['Construction year'])['price_$'].mean().to_frame().plot()
plt.xlabel('Construction year')
plt.ylabel('Average Price ($)')
plt.title('Average Price ($) for Properties in each Construction year')

# 5. Who are the top 10 hosts by calculated host listing count?

hosts=df.groupby('host name')['calculated host listings count'].sum().sort_values(ascending=False).nlargest(10).to_frame()
hosts_bar=plt.bar(hosts.index,hosts.loc[:,"calculated host listings count"])
plt.bar_label(hosts_bar,labels=hosts.loc[:,"calculated host listings count"],label_type='edge',padding=4)
plt.ylim([0,120000])
plt.xlabel('Hosts Name')
plt.ylabel('Calculated Host Listings Count')
plt.xticks(rotation=45)
plt.title('Top 10 Hosts by Calculated Host Listings Count')

# 6. Are hosts with verified identities more likely to receive positive reviews?

review=df.groupby('host_identity_verified')['review rate number'].mean().sort_values(ascending=False).to_frame()
review

review_bar=plt.bar(review.index,review.loc[:,"review rate number"])
plt.bar_label(review_bar,labels=round(review.loc[:,"review rate number"],2),padding=4)
plt.ylim([0,4])
plt.xlabel('Host Verification Status')
plt.ylabel('Average Review Rate Number')
plt.title('Average Review Rate for each Verification Statistics')

base_color=sns.color_palette()[0]
sns.boxplot(data=df,x="host_identity_verified",y="review rate number",color=base_color)
plt.xlabel('Host Verification Status')
plt.ylabel('Average Review Rate Number')
plt.title('Average Review Rate for each Verification Statistics')

# 7. Is there a correlation between the price of a listing and its service fee?

df['price_$'].corr(df['service_fee_$'])

sns.regplot(df,x="price_$",y="service_fee_$")
plt.xlabel('Price ($)')
plt.ylabel('Service fee ($)')
plt.title('A Regression Plot showing correlation of the Price of a Listing and its Service Fee.')

#What is the average review rate number (e.g., stars) for listings, and does it vary based on the neighborhood groupand room type?

ARRN=df.groupby(['neighbourhood group','room type'])['review rate number'].mean().to_frame()
ARRN

plt.figure(figsize=[12,10])
sns.barplot(data=df,x="neighbourhood group",y="review rate number",hue="room type")
plt.xlabel('neighbourhood group')
plt.ylabel('Average Review Rate')
plt.title('Average Review Rate for each Room/Property Type in each Neighbourhood Group')

#Are hosts with a higher calculated host listings count more likely to maintain higher availability throughout theyear?

sns.regplot(df,x="calculated host listings count",y="availability 365")
plt.xlabel('Calculated Host Listings')
plt.ylabel('Availability 365')
plt.title('A Regression Plot of the Relationship between Calculated Host Listings Count and Availability 365')

df['calculated host listings count'].corr(df['availability 365'])